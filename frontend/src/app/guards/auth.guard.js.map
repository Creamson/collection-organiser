{"version":3,"file":"auth.guard.js","sourceRoot":"","sources":["auth.guard.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA2C;AAC3C,0CAAoD;AACpD,6CAA6C;AAG7C,IAAa,SAAS;IACpB,mBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAClC,CAAC;IAED,+BAAW,GAAX;QACE,yCAAyC;QACzC,EAAE,CAAC,CAAC,8BAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAChC,wEAAwE;YACxE,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IACH,gBAAC;AAAD,CAAC,AAbD,IAaC;AAbY,SAAS;IADrB,iBAAU,EAAE;qCAEiB,eAAM;GADvB,SAAS,CAarB;AAbY,8BAAS","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {CanActivate, Router} from '@angular/router';\r\nimport {tokenNotExpired} from 'angular2-jwt';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  canActivate() {\r\n    // Check to see if a user has a valid JWT\r\n    if (tokenNotExpired('id_token')) {\r\n      // If they do, return true and allow the user to load the home component\r\n      return true;\r\n    }\r\n    this.router.navigate(['/']);\r\n    return false;\r\n  }\r\n}\r\n"]}